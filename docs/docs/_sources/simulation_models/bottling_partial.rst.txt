bottling_partial
################

The bottling module, saves fluid in an input tank, pumps it to a reservoir tank, and bottles it into virtual bottles.
The bottling is time-dependent. Changes in the volume flow, can interfere with the bottled amount.

Overview
========
There is one input and one output to the bottling module.
The input connects to a discrete valve, which is controlled by a state-graph.
Depending on the state of the system the valve opens sequentially and fills the input tank.

The input tank is connected via a pipe - discrete valve combination to a pump.
The pump connects to a reservoir tank.

From the reservoir tank fluid is filled into virtual bottles.
The bottling is controlled via a time-function.

.. image:: images/bottling_module.png
  :width: 500
  :alt: bottling module
**Bottling module in diagram view**


Functionality
=============
The modules buffers liquid and bottles it into virtual bottles.

A state graph sequentially waits for the input tank to be filled, before closing the input valves.
The purge valves of the input tank and the pump are subsequently activated and the fluids are pumped into the reservoir tank.
From the reservoir tank, virtual bottles are filled via a time-dependent square function.

The opening times and levels can be changed in the state graph, by changing the float ``maxVolPercentage`` or ``minVolPercentage`` in the conditions.

.. code-block::
   :linenos:

    valveDiscrete_port_in.open = if time < 2 then true elseif B401_filling.active then true else false;
    valveDiscrete_V404.open = if time < 2 then true elseif B402_filling.active then true else false;
    valve_V403.opening = if bottling.active then if sin(volumeFlow_factor * time) >= 0 then 1 else 0 else 0;
    pump_P401.N_in = if time < 2 then pump_P401_simulator elseif B402_filling.active then pump_P401_simulator else 0;
    B402_isEmpty.condition = if tank_B402.level <= minVolPercentage * tank_B402.height then true else false;
    B401_isFull.condition = if tank_B401.level >= maxVolPercentage * tank_B401.height then true else false;
    B402_isFull.condition = if tank_B402.level >= maxVolPercentage * tank_B402.height then true else false;


Faults
======
Between input tank one and reservoir tank, a leakage, which purges parts of the volume flow into an outer system sink, and a clogging,
which induces constriction of the pipe connection, can be induced.

A continuous leakage of the bottling valve can be induced by changing its closed state into any float bigger than ``0``.

The faults can be induced in the superModel.


Standard parametrization
========================
Within the model pump-speed, tank volume, and pipe diameters can be manually adapted, by double-clicking the components.
Switch times in the state-graph can be changed by double clicking on the transitions.

